[gcode_macro _A_CHANGE_FILAMENT]
# Modification: Saves a second, seperate copy of the GCode state after moving the bed down.
variable_purge: 0
gcode:
    {% set channel  = params.CHANNEL| int %}
    {% set restore  = params.RESTORE| default(1)| int %}
    SAVE_GCODE_STATE NAME=change_filament
    {% if "z" in printer.toolhead.homed_axes and printer.toolhead.position.z + 5 <= 220 %}
        G91
        G1 Z5
        M400
    {% endif %}
    RESTORE_GCODE_STATE NAME=change_filament MOVE=0
    
    SAVE_GCODE_STATE NAME=change_filament_after_z_move

    {% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
    {% set fan_speed = printer["fan_generic fanM106"].speed %}

    SET_GCODE_VARIABLE MACRO=END_CHANGE_FILAMENT VARIABLE=last_data VALUE="{{'restore': restore, 'temp': temp, 'fan_speed': fan_speed, 'channel': channel, 'need_restore': 1}}"

    RESPOND PREFIX="info" MSG="T{channel}"
    {% if purge == 1 %}
        PURGE_PRUTOK_IFS
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_A_CHANGE_FILAMENT VARIABLE=purge VALUE=0
    _CHANGE_FILAMENT CHANNEL={channel} RESTORE={restore}
    
[gcode_macro _REZGEM_PRUTOK]
# Modification: Save position after movements
description: Отрезаем пруток
gcode:
    {% set filament_unload_before_cutting  = params.FILAMENT_UNLOAD_BEFORE_CUTTING|default(0)|float %}
    {% set filament_unload_after_cutting   = params.FILAMENT_UNLOAD_AFTER_CUTTING|default(5)|float %}
    {% set filament_unload_speed           = params.FILAMENT_UNLOAD_SPEED|default(600)|float %}
    {% set use_trash_on_print = printer.save_variables.variables.use_trash_on_print|default(1) | int %}

    RESPOND PREFIX="info" MSG="Cutting the filament"
    {% if printer.toolhead.position.x < 20 %}
        G1 X20 F600
    {% endif %}
    
    {% if use_trash_on_print == 0 %}
      SAVE_GCODE_STATE NAME=cut_filament_after_x_move
    {% endif %}

    G92 E0

    _DISABLE_SENSOR
        G1 E-{filament_unload_before_cutting} F{filament_unload_speed}
        M400
    _ENABLE_SENSOR

    G90
    G1 Y10 F18000
    G1 Y-7.70 F1800
    
    {% if use_trash_on_print == 0 %}
      SAVE_GCODE_STATE NAME=cut_filament_after_y_move
    {% endif %}
    
    G1 X20  F12000
    G1 X-2.00 F600
    M400
    G92 E0

    _DISABLE_SENSOR
        G1 E-{filament_unload_after_cutting} F{filament_unload_speed}
        M400
    _ENABLE_SENSOR

[gcode_macro _IFS_REMOVE_PRUTOK]
# Modification: Returns to saved position instead of trash
gcode:
    {% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
    {% set use_trash_on_print = printer.save_variables.variables.use_trash_on_print|default(1) | int %}

    {% set prutok                          = params.PRUTOK|default(1)|int %}
    {% set extruder_temp                   = params.TEMP|default(220)|int %}

    {% set filament_type                   = params.FILAMENT_TYPE|default("PLA")|string %}
    {% set filament_unload_before_cutting  = params.FILAMENT_UNLOAD_BEFORE_CUTTING|default(0)|float %}
    {% set filament_unload_after_cutting   = params.FILAMENT_UNLOAD_AFTER_CUTTING|default(5)|float %}
    {% set filament_load_speed             = params.FILAMENT_LOAD_SPEED|default(300)|int %}
    {% set filament_unload_speed           = params.FILAMENT_UNLOAD_SPEED|default(600)|int %}
    {% set filament_tube_length            = params.FILAMENT_TUBE_LENGTH|default(1000)|int %}
    {% set nozzle_cleaning_length          = params.NOZZLE_CLEANING_LENGTH|default(60)|int %}

    RESPOND PREFIX="info" MSG="Extracting filament from the extruder {prutok} {filament_type}"
    _REZGEM_PRUTOK FILAMENT_UNLOAD_SPEED={filament_unload_speed} FILAMENT_UNLOAD_BEFORE_CUTTING={filament_unload_before_cutting} FILAMENT_UNLOAD_AFTER_CUTTING={filament_unload_after_cutting}
    {% if printer.print_stats.state == 'printing' and use_trash_on_print == 0 %}
      G1 X20 F600
      RESTORE_GCODE_STATE NAME=cut_filament_after_y_move MOVE=1 MOVE_SPEED=500
      RESTORE_GCODE_STATE NAME=cut_filament_after_x_move MOVE=1 MOVE_SPEED=500
      RESTORE_GCODE_STATE NAME=change_filament_after_z_move MOVE=1 MOVE_SPEED=500
      RESTORE_GCODE_STATE NAME=change_filament MOVE=1
      M400
    {% else %}
      _GOTO_TRASH SPEED=12000
    {% endif %}
    IFS_F24 PRUTOK={prutok}
    G92 E0

    _DISABLE_SENSOR
        G1 E-{nozzle_cleaning_length} F{filament_unload_speed}
        IFS_F11 PRUTOK={prutok} LEN={nozzle_cleaning_length*1.67|int} SPEED={filament_unload_speed*2} #WAIT=0
        M400
    _ENABLE_SENSOR

[gcode_macro END_CHANGE_FILAMENT]
# Modification: Slight extrusion after restoring position; removed RESTORE_GCODE_STATE as it's already taken care of elsewhere
variable_last_data: {'restore': 0, 'temp': 0, 'fan_speed': 0, 'channel': 99, 'need_restore': 0}
gcode:
    {% set resume  = params.RESUME| default(0)| int %}
    {% set use_trash_on_print = printer.save_variables.variables.use_trash_on_print|default(1) | int %}

    {% if last_data.restore == 1 %}
        {% if last_data.temp | int != 0 %}
            RESPOND PREFIX="info" MSG="Temp: T{last_data.temp}"
            M109 S{last_data.temp}
        {% endif %}
        RESPOND PREFIX="info" MSG="Fan: {last_data.fan_speed*100}"
        SET_FAN_SPEED FAN=fanM106 SPEED={last_data.fan_speed}
    {% endif %}

    {% if resume == 0 %}
        SDCARD_SET_CHANNEL CHANNEL={last_data.channel}
        SDCARD_CLEAR_REFUELLING
    {% endif %}

    {% if last_data.need_restore == 1 %}
        {% if use_trash_on_print == 0 %}
          M400
          G1 E1
          G92 E0
          M400
        {% else %}
          RESTORE_GCODE_STATE NAME=change_filament_after_z_move MOVE=1 SPEED=500
          RESTORE_GCODE_STATE NAME=change_filament MOVE=1          
        {% endif %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=END_CHANGE_FILAMENT VARIABLE=last_data VALUE="{{'restore': 0, 'temp': 0, 'fan_speed': 0, 'channel': 99, 'need_restore': 0}}"

    IFS_MOTION_ON
    IFS_SWITCH_ON

[gcode_macro _SBROS_TRASH_DAVIM]
# Modification 1: Pause time is 4000ms instead of 3000ms, and is skipped (as is the fan activation) during a print. (Change to 4000ms is applied even when use_trash_on_print == 1.)
# Modification 2: Accepts a "match_old_filament_removal" parameter. Theoretically, this should cause it to insert an amount matching the last filament's withdrawal distance. In practice, I haven't figured out how to retrieve this in gcode, so instead it just results in using a hardcoded length. Then, I've found that adding just a little bit more on, gives much cleaner results, which is why it's 30 rather than 25.
description: Сброс через какашник c выдавливанием
gcode:
    {% set prutok                          = params.PRUTOK|default(0)|int %}
    {% set filament_fan_speed              = params.FILAMENT_FAN_SPEED|default(102)|int %}
    {% set filament_load_speed             = params.FILAMENT_LOAD_SPEED|default(300)|int %}
    {% set filament_unload_after_drop      = params.FILAMENT_UNLOAD_AFTER_DROP|default(3)|float %}
    {% set match_old_filament_removal      = params.MATCH_OLD_FILAMENT_REMOVAL|default(0)|int %}
    {% set skip_trash_move                 = params.SKIP_TRASH_MOVE|default(0)|int %}
    {% set use_trash_on_print = printer.save_variables.variables.use_trash_on_print|default(1) | int %}
    
    {% if match_old_filament_removal != 0 %}
      {% set filament_drop_length = 30 %}
      {% set filament_drop_length_add = 0 %}
    {% else %}
      {% set filament_drop_length            = params.FILAMENT_DROP_LENGTH|default(90)|int %}
      {% set filament_drop_length_add        = params.FILAMENT_DROP_LENGTH_ADD|default(0)|int %}
    {% endif %}

    {% if skip_trash_move == 0 %}
      _GOTO_TRASH NOT220=1
    {% endif %}

    M106 S{filament_fan_speed|float/2|int} ; M106 S51

    G92 E0
    RESPOND PREFIX="info" MSG="Drop filament {filament_drop_length} + {filament_drop_length_add}. Speed {filament_load_speed}"

    _DISABLE_SENSOR
        G1 E{filament_drop_length+filament_drop_length_add} F{filament_load_speed}   ; G1 E90 F300

        {% if prutok != 0 %}
            IFS_F10 PRUTOK={prutok} LEN={filament_drop_length+filament_drop_length_add} SPEED={filament_load_speed} SLEEP=1
            IFS_F39 PRUTOK={prutok}
            IFS_F112
            IFS_F39 PRUTOK={prutok}
        {% endif %}
        M400
    _ENABLE_SENSOR

    {% if printer.print_stats.state != 'printing' or use_trash_on_print != 0 %}
        M106 S{filament_fan_speed}      ; M106 S102
        G4 P4000
    {% endif %}

    {% if filament_unload_after_drop != 0 %}
        ; Ретракт
        G92 E0

        _DISABLE_SENSOR
            G1 E-{filament_unload_after_drop} F{filament_load_speed}
            M400
        _ENABLE_SENSOR
    {% endif %}

    G92 E0

[gcode_macro _INSERT_PRUTOK_IFS]
# Modification: When use_trash_on_print is 0, passes a special parameter to _SBROS_TRASH_DAVIM (also customized) that causes it to use much smaller drop values.
description: Вставить пруток в IFS и экструдер
gcode:
    {% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}

    {% set prutok                          = params.PRUTOK|default(1)|int %}
    {% set extruder_temp                   = params.TEMP|default(220)|int %}
    {% set need_stop                       = params.NEED_STOP|default(1)|int %}
    {% set trash                           = params.TRASH|default(0)|int %}

    {% set filament_type                   = params.FILAMENT_TYPE|default("PLA")|string %}
    {% set filament_unload_before_cutting  = params.FILAMENT_UNLOAD_BEFORE_CUTTING|default(0)|float %}
    {% set filament_unload_after_cutting   = params.FILAMENT_UNLOAD_AFTER_CUTTING|default(5)|float %}
    {% set filament_unload_after_drop      = params.FILAMENT_UNLOAD_AFTER_DROP|default(3)|float %}
    {% set filament_unload_speed           = params.FILAMENT_UNLOAD_SPEED|default(600)|int %}
    {% set filament_load_speed             = params.FILAMENT_LOAD_SPEED|default(300)|int %}
    {% set filament_tube_length            = params.FILAMENT_TUBE_LENGTH|default(1000)|int %}
    {% set filament_drop_length            = params.FILAMENT_DROP_LENGTH|default(90)|int %}
    {% set filament_drop_length_add        = params.FILAMENT_DROP_LENGTH_ADD|default(0)|int %}
    {% set filament_fan_speed              = params.FILAMENT_FAN_SPEED|default(102)|int %}

    {% set use_trash_on_print = printer.save_variables.variables.use_trash_on_print|default(1) | int %}
    {% set is_printing = 0 %}
    {% if printer.print_stats.state == 'printing' %}
      {% set is_printing = 1 %}
    {% endif %}

    RESPOND PREFIX="info" MSG="Loading filament {prutok} {filament_type}"
    _G28
    {% if trash == 1 %}
      {% if is_printing == 0 or use_trash_on_print != 0 %}
        _GOTO_TRASH
      {% endif %}
    {% endif %}

    IFS_REMOVE_CURRENT_PRUTOK TEMP={temp}
    {% if is_printing == 0 or use_trash_on_print != 0 %}
      _GOTO_TRASH
    {% endif %}

    RESPOND PREFIX="info" MSG="Heating the nozzle to {extruder_temp} degrees"
    M104 S{extruder_temp}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp-2} MAXIMUM={extruder_temp+4}

    IFS_F24 PRUTOK={prutok}
    IFS_F10 PRUTOK={prutok} LEN={filament_tube_length} SPEED={filament_unload_speed*2} CHECK=1

    {% if use_trash_on_print != 0 or is_printing == 0 %}
        _SBROS_TRASH_DAVIM PRUTOK={prutok} FILAMENT_FAN_SPEED={filament_fan_speed} FILAMENT_DROP_LENGTH={filament_drop_length} FILAMENT_DROP_LENGTH_ADD={filament_drop_length_add} FILAMENT_LOAD_SPEED={filament_load_speed} FILAMENT_UNLOAD_AFTER_DROP=0
        _SBROS_TRASH
        _CLEAR_REZINA

        _SBROS_TRASH_DAVIM PRUTOK=0        FILAMENT_FAN_SPEED={filament_fan_speed} FILAMENT_DROP_LENGTH={filament_drop_length} FILAMENT_DROP_LENGTH_ADD={filament_drop_length_add} FILAMENT_LOAD_SPEED={filament_load_speed} FILAMENT_UNLOAD_AFTER_DROP={filament_unload_after_drop}
        _SBROS_TRASH
        _CLEAR_REZINA
    {% else %}
        _SBROS_TRASH_DAVIM PRUTOK={prutok} FILAMENT_FAN_SPEED={filament_fan_speed} MATCH_OLD_FILAMENT_REMOVAL=1 FILAMENT_LOAD_SPEED={filament_load_speed} FILAMENT_UNLOAD_AFTER_DROP=0 SKIP_TRASH_MOVE=1
    {% endif %}

    IFS_F23 PRUTOK={prutok}
    M106 S0

    {% if need_stop == 1 %}
        M104 S0 T0
    {% endif %}
    IFS_EXTRUDER_SENSOR
    {% if prutok != 0 %}
        _SET_EXTRUDER_SLOT SLOT={prutok}
        SET_CURRENT_PRUTOK
    {% endif %}